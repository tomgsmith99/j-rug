<?php

// Returns an array with all basic user info
function getUserBasics($typeOfUser = "social") {

  global $lastNames;
  global $middleNames;
  global $emailProviders;
  global $states;
  global $ages;
  // global $subscribed;
  
  global $logFileHandle;
  
  /********************************************/
  // password - only if trad user
  
  if ($typeOfUser == "trad") {
      
      $thisUser["password"] = rand(100, 999) . rand(100, 999) . rand(100, 999) . rand(100, 999);
      
  }
 
  /********************************************/
  // birthday

  $age = getRandomValue($ages, max(array_keys($ages)));

  $yob = date("Y") - $age;
  
  $thisUser["birthday"] = getBirthday($yob);
  
  fwrite($logFileHandle, "<p>The yob is: " . $yob);

  /*******************************************/
  // gender

  // $thisUser["gender"] = "female";
  
  $thisUser["gender"] = getGender($age);

  // if (rand(1,100) > 56) { $thisUser["gender"] = "male"; }

  /*******************************************/
  // givenName

  $thisUser["givenName"] = getFirstName($thisUser["gender"], $yob);

  /*******************************************/
  // middleName
  // just a middle initial

  $thisUser["middleName"] = $middleNames[rand(0, (sizeof($middleNames) - 1))];

  /*******************************************/
  // familyName 

  $thisUser["familyName"] = $lastNames[rand(0, (sizeof($lastNames) - 1))];

  // $fullname is used in creating the email address
  // tom.g.smith
  $fullName = strtolower($thisUser["givenName"] . "." . $thisUser["middleName"] . "." . $thisUser["familyName"]);

  // Get rid of apostrophe in O'Connor, for example
  $fullName = str_replace("'", "", $fullName);
  
  fwrite($logFileHandle, "<p>The full name is: " . $fullName);

  /*******************************************/
  // email

  $emailProvider = $emailProviders[rand(0, (sizeof($emailProviders) - 1))];

  $thisUser["email"] = strtolower($fullName . "@" . $emailProvider);

  /*******************************************/
  // primaryAddress/country

  $thisUser["primaryAddress"]["country"] = getCountry();

  /*******************************************/
  // primaryAddress>stateAbbreviation

  if ($thisUser["primaryAddress"]["country"] == "United States") {

    $thisUser["primaryAddress"]["stateAbbreviation"] = getRandomValue($states, max(array_keys($states)));

  }

  /******************************************/
  // subscribed
  // Newsletter subscription status

  // $thisUser["subscribed"] = getRandomValue($subscribed);

  /******************************************/
  // Account created

  $thisUser["createdFake"] = getAccountCreationDate($thisUser["gender"]);
  
  fwrite($logFileHandle, "<p>The account creation date is: " . $thisUser["createdFake"]);

  /******************************************/
  // emailVerified

  $thisEmail = getEmailVerifiedDate();

  if (!empty($thisEmail)) { $thisUser["emailVerified"] = $thisEmail; }
  
  /******************************************/

  $thisUser["isAutogeneratedUser"] = "true";

  /******************************************/
  // Done!

  return $thisUser;

}

function getAccountCreationDate($gender, $age) {
    
    $minAge = 14;
    // Male accounts are on average older than female accounts
    // There is a 2/3 chance that a male account will be in the last two years
    // There is a 1/3 chance that a male account will be in the last year
    // Flipped for females
    
    $x = rand(1,3);
    
    $y = 730; // two years (365 * 2)
    
    if ($gender == "male") {
        if ($x == 1) { $y = 365; }
    }
    if ($gender == "female") {
        if ($x != 1) { $y = 365; }
    }
    
    // Younger users created more recently
    
    $y = $y + $age - $minAge;

    $accountCreationDate = date('c', strtotime( '-'.mt_rand(1, $y).' days'));
    
    return (strval($accountCreationDate));

}
// returns a dateTime string
function getEmailVerifiedDate() {

  // 73% of users have a verified email, regardless of trad vs. social
  // email has been verified within the last six months

  $j = rand(1, 100);

  if ($j <= 73) { $verifiedDate = date('c', strtotime( '-'.mt_rand(1,180).' days')); }

  else { $verifiedDate = ""; }

  return (strval($verifiedDate));

}

// Picks a random first name from the appropriate array
function getFirstName($gender, $yob) {

  global $femaleFirstNames1990census;
  global $femaleFirstNames1980_1989;
  global $femaleFirstNames1990_1999;

  global $maleFirstNames1990census;
  global $maleFirstNames1980_1989;
  global $maleFirstNames1990_1999;
 
  $arrayNames = array();

  $arrayNames["male"]["default"] = $maleFirstNames1990census;
  $arrayNames["male"]["eighties"] = $maleFirstNames1980_1989;
  $arrayNames["male"]["nineties"] = $maleFirstNames1990_1999;

  $arrayNames["female"]["default"] = $femaleFirstNames1990census;
  $arrayNames["female"]["eighties"] = $femaleFirstNames1980_1989;
  $arrayNames["female"]["nineties"] = $femaleFirstNames1990_1999;

  // Default
  $listOfFnames = $arrayNames[$gender]["default"];

  $j = rand(1, 10);

  if ($yob >= 1980 && $yob <= 1989) {
    if ($j >= 1 && $j <= 6) { $listOfFnames = $arrayNames[$gender]["eighties"]; }
    if ($j >= 7 && $j <= 8) { $listOfFnames = $arrayNames[$gender]["nineties"]; }
  }
  if ($yob >= 1990) {
    if ($j >= 1 && $j <= 6) { $listOfFnames = $arrayNames[$gender]["nineties"]; }
    if ($j >= 7 && $j <= 8) { $listOfFnames = $arrayNames[$gender]["eighties"]; }
  }
  
  $fnamePos = rand(0, (sizeof($listOfFnames) - 1) );

  return $listOfFnames[$fnamePos];

}

function getBirthday($yob) {

  // global $ages;

  // $age = getRandomValue($ages, max(array_keys($ages)));

  // $yob = date("Y") - $age;

  $month = rand(1, 12);
  if ($month < 10) { $month = "0" . $month; }

  $day = rand(1, 28);
  if ($day < 10) { $day = "0" . $day; }

  return ($yob . $month . $day);

}

function getCountry() {

  global $countries;

  $country = getRandomValue($countries, max(array_keys($countries)));

  return $country;

}

function getGender($age) {
    
    $gender = "female";
    
    $x = rand(1,100);
    
    if ($age >= 13 && $age <= 17 ) {
        
        if ($x > 55) { $gender = "male"; }
        return $gender;
        
    }
    
    if ($age >= 18 && $age <= 24 ) {
        
        if ($x > 70) { $gender = "male"; }
        return $gender;
        
    }
    
    if ($age >= 25 && $age <= 36 ) {
        
        if ($x > 59) { $gender = "male"; }
        return $gender;
        
    }
    
    if ($age >= 37 && $age <= 54 ) {
        
        if ($x > 59) { $gender = "male"; }
        return $gender;
        
    }
    
    return $gender;
    
}
